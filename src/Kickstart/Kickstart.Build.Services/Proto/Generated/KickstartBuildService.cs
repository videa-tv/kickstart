// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: KickstartBuildService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Company.KickstartBuild.Services.Types {

  /// <summary>Holder for reflection information generated from KickstartBuildService.proto</summary>
  public static partial class KickstartBuildServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for KickstartBuildService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KickstartBuildServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtLaWNrc3RhcnRCdWlsZFNlcnZpY2UucHJvdG8SI3ZpZGVhLktpY2tzdGFy",
            "dEJ1aWxkLnNlcnZpY2VzLnR5cGVzGh5nb29nbGUvcHJvdG9idWYvd3JhcHBl",
            "cnMucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvImYK",
            "FERlcGxveVJlbGVhc2VSZXF1ZXN0EhoKEnJlbGVhc2VfaWRlbnRpZmllchgB",
            "IAEoBRIeChZlbnZpcm9ubWVudF9pZGVudGlmaWVyGAIgASgFEhIKCnByb2pl",
            "Y3RfaWQYAyABKAkiFwoVRGVwbG95UmVsZWFzZVJlc3BvbnNlImoKFENyZWF0",
            "ZVJlbGVhc2VSZXF1ZXN0ElIKEnJlbGVhc2VfZGVmaW5pdGlvbhgBIAEoCzI2",
            "LnZpZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZpY2VzLnR5cGVzLlJlbGVhc2VE",
            "ZWZpbml0aW9uImsKFUNyZWF0ZVJlbGVhc2VSZXNwb25zZRJSChJyZWxlYXNl",
            "X2RlZmluaXRpb24YASABKAsyNi52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2",
            "aWNlcy50eXBlcy5SZWxlYXNlRGVmaW5pdGlvbiJ1Ch9DcmVhdGVSZWxlYXNl",
            "RGVmaW5pdGlvblJlc3BvbnNlElIKEnJlbGVhc2VfZGVmaW5pdGlvbhgBIAEo",
            "CzI2LnZpZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZpY2VzLnR5cGVzLlJlbGVh",
            "c2VEZWZpbml0aW9uIvQBChFSZWxlYXNlRGVmaW5pdGlvbhIlCh1yZWxlYXNl",
            "X2RlZmluaXRpb25faWRlbnRpZmllchgBIAEoBRIfChdyZWxlYXNlX2RlZmlu",
            "aXRpb25fbmFtZRgCIAEoCRJGCgxlbnZpcm9ubWVudHMYAyADKAsyMC52aWRl",
            "YS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5FbnZpcm9ubWVudBJP",
            "ChFidWlsZF9kZWZpbml0aW9ucxgEIAMoCzI0LnZpZGVhLktpY2tzdGFydEJ1",
            "aWxkLnNlcnZpY2VzLnR5cGVzLkJ1aWxkRGVmaW5pdGlvbiLwAwoeQ3JlYXRl",
            "UmVsZWFzZURlZmluaXRpb25SZXF1ZXN0EjIKDHNlcnZpY2VfbmFtZRgBIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJHCiFyZXVzZV9hd3Nf",
            "c3RhY2tfZnJvbV9zZXJ2aWNlX25hbWUYAiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSNAoOc2VydmljZV9mb2xkZXIYAyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSOgoUY29uZmlndXJhdGlvbl9mb2xk",
            "ZXIYBCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSFAoMaXNf",
            "cHJvZF9wYXRoGAUgASgIEiYKHm5lZWRzX2F3c191c2VyX2FjY291bnRfY3Jl",
            "YXRlZBgGIAEoCBJSChJyZWxlYXNlX2RlZmluaXRpb24YByABKAsyNi52aWRl",
            "YS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5SZWxlYXNlRGVmaW5p",
            "dGlvbhJNChBkYXRhYmFzZV9zZXJ2ZXJzGAggAygLMjMudmlkZWEuS2lja3N0",
            "YXJ0QnVpbGQuc2VydmljZXMudHlwZXMuRGF0YWJhc2VTZXJ2ZXIiYwoRUXVl",
            "dWVCdWlsZFJlcXVlc3QSTgoQYnVpbGRfZGVmaW5pdGlvbhgBIAEoCzI0LnZp",
            "ZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZpY2VzLnR5cGVzLkJ1aWxkRGVmaW5p",
            "dGlvbiJPChJRdWV1ZUJ1aWxkUmVzcG9uc2USOQoFYnVpbGQYASABKAsyKi52",
            "aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5CdWlsZCKiAQoc",
            "Q3JlYXRlQnVpbGREZWZpbml0aW9uUmVxdWVzdBIyCgxzZXJ2aWNlX25hbWUY",
            "ASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSTgoQYnVpbGRf",
            "ZGVmaW5pdGlvbhgCIAEoCzI0LnZpZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZp",
            "Y2VzLnR5cGVzLkJ1aWxkRGVmaW5pdGlvbiKjAQodQ3JlYXRlQnVpbGREZWZp",
            "bml0aW9uUmVzcG9uc2USMgoMc2VydmljZV9uYW1lGAEgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEk4KEGJ1aWxkX2RlZmluaXRpb24YAiAB",
            "KAsyNC52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5CdWls",
            "ZERlZmluaXRpb24itwEKD0J1aWxkRGVmaW5pdGlvbhIjChtidWlsZF9kZWZp",
            "bml0aW9uX2lkZW50aWZpZXIYASABKAUSHQoVYnVpbGRfZGVmaW5pdGlvbl9u",
            "YW1lGAIgASgJEi8KCXJlcG9fbmFtZRgFIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIvCglyZXBvX3BhdGgYBiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUiIQoFQnVpbGQSGAoQYnVpbGRfaWRlbnRpZmll",
            "chgBIAEoBSKVAQoLRW52aXJvbm1lbnQSHgoWZW52aXJvbm1lbnRfaWRlbnRp",
            "ZmllchgBIAEoBRIYChBlbnZpcm9ubWVudF9uYW1lGAIgASgJEkwKD2Vudmly",
            "b25tZW50X3RhZxgDIAEoDjIzLnZpZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZp",
            "Y2VzLnR5cGVzLkVudmlyb25tZW50VGFnIuIBCg5EYXRhYmFzZVNlcnZlchJA",
            "CglkYm1zX3R5cGUYASABKA4yLS52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2",
            "aWNlcy50eXBlcy5EYm1zVHlwZRJMCg9zZXJ2ZXJfbG9jYXRpb24YAiABKA4y",
            "My52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5TZXJ2ZXJM",
            "b2NhdGlvbhJACglkYXRhYmFzZXMYAyADKAsyLS52aWRlYS5LaWNrc3RhcnRC",
            "dWlsZC5zZXJ2aWNlcy50eXBlcy5EYXRhYmFzZSI5CghEYXRhYmFzZRIVCg1k",
            "YXRhYmFzZV9uYW1lGAEgASgJEhYKDnByb2plY3RfZm9sZGVyGAIgASgJKkEK",
            "DkVudmlyb25tZW50VGFnEgcKA0RFVhAAEgYKAlFBEAESCQoFQUxQSEEQAhII",
            "CgRQUk9EEAMSCQoFT1RIRVIQBCoyCghEYm1zVHlwZRINCglTUUxTRVJWRVIQ",
            "ABIMCghQT1NUR1JFUxABEgkKBU1ZU1FMEAIqKAoOU2VydmVyTG9jYXRpb24S",
            "DQoJT05QUkVNSVNFEAASBwoDQVdTEAEy8AUKFUtpY2tzdGFydEJ1aWxkU2Vy",
            "dmljZRKkAQoXQ3JlYXRlUmVsZWFzZURlZmluaXRpb24SQy52aWRlYS5LaWNr",
            "c3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5DcmVhdGVSZWxlYXNlRGVmaW5p",
            "dGlvblJlcXVlc3QaRC52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50",
            "eXBlcy5DcmVhdGVSZWxlYXNlRGVmaW5pdGlvblJlc3BvbnNlEoYBCg1DcmVh",
            "dGVSZWxlYXNlEjkudmlkZWEuS2lja3N0YXJ0QnVpbGQuc2VydmljZXMudHlw",
            "ZXMuQ3JlYXRlUmVsZWFzZVJlcXVlc3QaOi52aWRlYS5LaWNrc3RhcnRCdWls",
            "ZC5zZXJ2aWNlcy50eXBlcy5DcmVhdGVSZWxlYXNlUmVzcG9uc2UShgEKDURl",
            "cGxveVJlbGVhc2USOS52aWRlYS5LaWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50",
            "eXBlcy5EZXBsb3lSZWxlYXNlUmVxdWVzdBo6LnZpZGVhLktpY2tzdGFydEJ1",
            "aWxkLnNlcnZpY2VzLnR5cGVzLkRlcGxveVJlbGVhc2VSZXNwb25zZRJ9CgpR",
            "dWV1ZUJ1aWxkEjYudmlkZWEuS2lja3N0YXJ0QnVpbGQuc2VydmljZXMudHlw",
            "ZXMuUXVldWVCdWlsZFJlcXVlc3QaNy52aWRlYS5LaWNrc3RhcnRCdWlsZC5z",
            "ZXJ2aWNlcy50eXBlcy5RdWV1ZUJ1aWxkUmVzcG9uc2USngEKFUNyZWF0ZUJ1",
            "aWxkRGVmaW5pdGlvbhJBLnZpZGVhLktpY2tzdGFydEJ1aWxkLnNlcnZpY2Vz",
            "LnR5cGVzLkNyZWF0ZUJ1aWxkRGVmaW5pdGlvblJlcXVlc3QaQi52aWRlYS5L",
            "aWNrc3RhcnRCdWlsZC5zZXJ2aWNlcy50eXBlcy5DcmVhdGVCdWlsZERlZmlu",
            "aXRpb25SZXNwb25zZTovCgd2ZXJzaW9uEhwuZ29vZ2xlLnByb3RvYnVmLkZp",
            "bGVPcHRpb25zGNCGAyABKAlCL6oCI1ZpZGVhLktpY2tzdGFydEJ1aWxkLlNl",
            "cnZpY2VzLlR5cGVzgrUYBTEuMy4xYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, pbr::FileDescriptor.DescriptorProtoFileDescriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Company.KickstartBuild.Services.Types.EnvironmentTag), typeof(global::Company.KickstartBuild.Services.Types.DbmsType), typeof(global::Company.KickstartBuild.Services.Types.ServerLocation), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.DeployReleaseRequest), global::Company.KickstartBuild.Services.Types.DeployReleaseRequest.Parser, new[]{ "ReleaseIdentifier", "EnvironmentIdentifier", "ProjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.DeployReleaseResponse), global::Company.KickstartBuild.Services.Types.DeployReleaseResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateReleaseRequest), global::Company.KickstartBuild.Services.Types.CreateReleaseRequest.Parser, new[]{ "ReleaseDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateReleaseResponse), global::Company.KickstartBuild.Services.Types.CreateReleaseResponse.Parser, new[]{ "ReleaseDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateReleaseDefinitionResponse), global::Company.KickstartBuild.Services.Types.CreateReleaseDefinitionResponse.Parser, new[]{ "ReleaseDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.ReleaseDefinition), global::Company.KickstartBuild.Services.Types.ReleaseDefinition.Parser, new[]{ "ReleaseDefinitionIdentifier", "ReleaseDefinitionName", "Environments", "BuildDefinitions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateReleaseDefinitionRequest), global::Company.KickstartBuild.Services.Types.CreateReleaseDefinitionRequest.Parser, new[]{ "ServiceName", "ReuseAwsStackFromServiceName", "ServiceFolder", "ConfigurationFolder", "IsProdPath", "NeedsAwsUserAccountCreated", "ReleaseDefinition", "DatabaseServers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.QueueBuildRequest), global::Company.KickstartBuild.Services.Types.QueueBuildRequest.Parser, new[]{ "BuildDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.QueueBuildResponse), global::Company.KickstartBuild.Services.Types.QueueBuildResponse.Parser, new[]{ "Build" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateBuildDefinitionRequest), global::Company.KickstartBuild.Services.Types.CreateBuildDefinitionRequest.Parser, new[]{ "ServiceName", "BuildDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.CreateBuildDefinitionResponse), global::Company.KickstartBuild.Services.Types.CreateBuildDefinitionResponse.Parser, new[]{ "ServiceName", "BuildDefinition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.BuildDefinition), global::Company.KickstartBuild.Services.Types.BuildDefinition.Parser, new[]{ "BuildDefinitionIdentifier", "BuildDefinitionName", "RepoName", "RepoPath" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.Build), global::Company.KickstartBuild.Services.Types.Build.Parser, new[]{ "BuildIdentifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.Environment), global::Company.KickstartBuild.Services.Types.Environment.Parser, new[]{ "EnvironmentIdentifier", "EnvironmentName", "EnvironmentTag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.DatabaseServer), global::Company.KickstartBuild.Services.Types.DatabaseServer.Parser, new[]{ "DbmsType", "ServerLocation", "Databases" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Company.KickstartBuild.Services.Types.Database), global::Company.KickstartBuild.Services.Types.Database.Parser, new[]{ "DatabaseName", "ProjectFolder" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EnvironmentTag {
    [pbr::OriginalName("DEV")] Dev = 0,
    [pbr::OriginalName("QA")] Qa = 1,
    [pbr::OriginalName("ALPHA")] Alpha = 2,
    [pbr::OriginalName("PROD")] Prod = 3,
    [pbr::OriginalName("OTHER")] Other = 4,
  }

  public enum DbmsType {
    [pbr::OriginalName("SQLSERVER")] Sqlserver = 0,
    [pbr::OriginalName("POSTGRES")] Postgres = 1,
    [pbr::OriginalName("MYSQL")] Mysql = 2,
  }

  public enum ServerLocation {
    [pbr::OriginalName("ONPREMISE")] Onpremise = 0,
    [pbr::OriginalName("AWS")] Aws = 1,
  }

  #endregion

  #region Messages
  public sealed partial class DeployReleaseRequest : pb::IMessage<DeployReleaseRequest> {
    private static readonly pb::MessageParser<DeployReleaseRequest> _parser = new pb::MessageParser<DeployReleaseRequest>(() => new DeployReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseRequest(DeployReleaseRequest other) : this() {
      releaseIdentifier_ = other.releaseIdentifier_;
      environmentIdentifier_ = other.environmentIdentifier_;
      projectId_ = other.projectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseRequest Clone() {
      return new DeployReleaseRequest(this);
    }

    /// <summary>Field number for the "release_identifier" field.</summary>
    public const int ReleaseIdentifierFieldNumber = 1;
    private int releaseIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReleaseIdentifier {
      get { return releaseIdentifier_; }
      set {
        releaseIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "environment_identifier" field.</summary>
    public const int EnvironmentIdentifierFieldNumber = 2;
    private int environmentIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnvironmentIdentifier {
      get { return environmentIdentifier_; }
      set {
        environmentIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 3;
    private string projectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReleaseIdentifier != other.ReleaseIdentifier) return false;
      if (EnvironmentIdentifier != other.EnvironmentIdentifier) return false;
      if (ProjectId != other.ProjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReleaseIdentifier != 0) hash ^= ReleaseIdentifier.GetHashCode();
      if (EnvironmentIdentifier != 0) hash ^= EnvironmentIdentifier.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReleaseIdentifier != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReleaseIdentifier);
      }
      if (EnvironmentIdentifier != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EnvironmentIdentifier);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReleaseIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReleaseIdentifier);
      }
      if (EnvironmentIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnvironmentIdentifier);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.ReleaseIdentifier != 0) {
        ReleaseIdentifier = other.ReleaseIdentifier;
      }
      if (other.EnvironmentIdentifier != 0) {
        EnvironmentIdentifier = other.EnvironmentIdentifier;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReleaseIdentifier = input.ReadInt32();
            break;
          }
          case 16: {
            EnvironmentIdentifier = input.ReadInt32();
            break;
          }
          case 26: {
            ProjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeployReleaseResponse : pb::IMessage<DeployReleaseResponse> {
    private static readonly pb::MessageParser<DeployReleaseResponse> _parser = new pb::MessageParser<DeployReleaseResponse>(() => new DeployReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeployReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseResponse(DeployReleaseResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeployReleaseResponse Clone() {
      return new DeployReleaseResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeployReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeployReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeployReleaseResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateReleaseRequest : pb::IMessage<CreateReleaseRequest> {
    private static readonly pb::MessageParser<CreateReleaseRequest> _parser = new pb::MessageParser<CreateReleaseRequest>(() => new CreateReleaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReleaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseRequest(CreateReleaseRequest other) : this() {
      ReleaseDefinition = other.releaseDefinition_ != null ? other.ReleaseDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseRequest Clone() {
      return new CreateReleaseRequest(this);
    }

    /// <summary>Field number for the "release_definition" field.</summary>
    public const int ReleaseDefinitionFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.ReleaseDefinition releaseDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.ReleaseDefinition ReleaseDefinition {
      get { return releaseDefinition_; }
      set {
        releaseDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReleaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReleaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReleaseDefinition, other.ReleaseDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (releaseDefinition_ != null) hash ^= ReleaseDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (releaseDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (releaseDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReleaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.releaseDefinition_ != null) {
        if (releaseDefinition_ == null) {
          releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
        }
        ReleaseDefinition.MergeFrom(other.ReleaseDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (releaseDefinition_ == null) {
              releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
            }
            input.ReadMessage(releaseDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateReleaseResponse : pb::IMessage<CreateReleaseResponse> {
    private static readonly pb::MessageParser<CreateReleaseResponse> _parser = new pb::MessageParser<CreateReleaseResponse>(() => new CreateReleaseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReleaseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseResponse(CreateReleaseResponse other) : this() {
      ReleaseDefinition = other.releaseDefinition_ != null ? other.ReleaseDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseResponse Clone() {
      return new CreateReleaseResponse(this);
    }

    /// <summary>Field number for the "release_definition" field.</summary>
    public const int ReleaseDefinitionFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.ReleaseDefinition releaseDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.ReleaseDefinition ReleaseDefinition {
      get { return releaseDefinition_; }
      set {
        releaseDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReleaseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReleaseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReleaseDefinition, other.ReleaseDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (releaseDefinition_ != null) hash ^= ReleaseDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (releaseDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (releaseDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReleaseResponse other) {
      if (other == null) {
        return;
      }
      if (other.releaseDefinition_ != null) {
        if (releaseDefinition_ == null) {
          releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
        }
        ReleaseDefinition.MergeFrom(other.ReleaseDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (releaseDefinition_ == null) {
              releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
            }
            input.ReadMessage(releaseDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateReleaseDefinitionResponse : pb::IMessage<CreateReleaseDefinitionResponse> {
    private static readonly pb::MessageParser<CreateReleaseDefinitionResponse> _parser = new pb::MessageParser<CreateReleaseDefinitionResponse>(() => new CreateReleaseDefinitionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReleaseDefinitionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionResponse(CreateReleaseDefinitionResponse other) : this() {
      ReleaseDefinition = other.releaseDefinition_ != null ? other.ReleaseDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionResponse Clone() {
      return new CreateReleaseDefinitionResponse(this);
    }

    /// <summary>Field number for the "release_definition" field.</summary>
    public const int ReleaseDefinitionFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.ReleaseDefinition releaseDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.ReleaseDefinition ReleaseDefinition {
      get { return releaseDefinition_; }
      set {
        releaseDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReleaseDefinitionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReleaseDefinitionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReleaseDefinition, other.ReleaseDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (releaseDefinition_ != null) hash ^= ReleaseDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (releaseDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (releaseDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReleaseDefinitionResponse other) {
      if (other == null) {
        return;
      }
      if (other.releaseDefinition_ != null) {
        if (releaseDefinition_ == null) {
          releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
        }
        ReleaseDefinition.MergeFrom(other.ReleaseDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (releaseDefinition_ == null) {
              releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
            }
            input.ReadMessage(releaseDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReleaseDefinition : pb::IMessage<ReleaseDefinition> {
    private static readonly pb::MessageParser<ReleaseDefinition> _parser = new pb::MessageParser<ReleaseDefinition>(() => new ReleaseDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReleaseDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseDefinition(ReleaseDefinition other) : this() {
      releaseDefinitionIdentifier_ = other.releaseDefinitionIdentifier_;
      releaseDefinitionName_ = other.releaseDefinitionName_;
      environments_ = other.environments_.Clone();
      buildDefinitions_ = other.buildDefinitions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReleaseDefinition Clone() {
      return new ReleaseDefinition(this);
    }

    /// <summary>Field number for the "release_definition_identifier" field.</summary>
    public const int ReleaseDefinitionIdentifierFieldNumber = 1;
    private int releaseDefinitionIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReleaseDefinitionIdentifier {
      get { return releaseDefinitionIdentifier_; }
      set {
        releaseDefinitionIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "release_definition_name" field.</summary>
    public const int ReleaseDefinitionNameFieldNumber = 2;
    private string releaseDefinitionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReleaseDefinitionName {
      get { return releaseDefinitionName_; }
      set {
        releaseDefinitionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "environments" field.</summary>
    public const int EnvironmentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Company.KickstartBuild.Services.Types.Environment> _repeated_environments_codec
        = pb::FieldCodec.ForMessage(26, global::Company.KickstartBuild.Services.Types.Environment.Parser);
    private readonly pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Environment> environments_ = new pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Environment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Environment> Environments {
      get { return environments_; }
    }

    /// <summary>Field number for the "build_definitions" field.</summary>
    public const int BuildDefinitionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Company.KickstartBuild.Services.Types.BuildDefinition> _repeated_buildDefinitions_codec
        = pb::FieldCodec.ForMessage(34, global::Company.KickstartBuild.Services.Types.BuildDefinition.Parser);
    private readonly pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.BuildDefinition> buildDefinitions_ = new pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.BuildDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.BuildDefinition> BuildDefinitions {
      get { return buildDefinitions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReleaseDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReleaseDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReleaseDefinitionIdentifier != other.ReleaseDefinitionIdentifier) return false;
      if (ReleaseDefinitionName != other.ReleaseDefinitionName) return false;
      if(!environments_.Equals(other.environments_)) return false;
      if(!buildDefinitions_.Equals(other.buildDefinitions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReleaseDefinitionIdentifier != 0) hash ^= ReleaseDefinitionIdentifier.GetHashCode();
      if (ReleaseDefinitionName.Length != 0) hash ^= ReleaseDefinitionName.GetHashCode();
      hash ^= environments_.GetHashCode();
      hash ^= buildDefinitions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReleaseDefinitionIdentifier != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReleaseDefinitionIdentifier);
      }
      if (ReleaseDefinitionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReleaseDefinitionName);
      }
      environments_.WriteTo(output, _repeated_environments_codec);
      buildDefinitions_.WriteTo(output, _repeated_buildDefinitions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReleaseDefinitionIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReleaseDefinitionIdentifier);
      }
      if (ReleaseDefinitionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReleaseDefinitionName);
      }
      size += environments_.CalculateSize(_repeated_environments_codec);
      size += buildDefinitions_.CalculateSize(_repeated_buildDefinitions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReleaseDefinition other) {
      if (other == null) {
        return;
      }
      if (other.ReleaseDefinitionIdentifier != 0) {
        ReleaseDefinitionIdentifier = other.ReleaseDefinitionIdentifier;
      }
      if (other.ReleaseDefinitionName.Length != 0) {
        ReleaseDefinitionName = other.ReleaseDefinitionName;
      }
      environments_.Add(other.environments_);
      buildDefinitions_.Add(other.buildDefinitions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReleaseDefinitionIdentifier = input.ReadInt32();
            break;
          }
          case 18: {
            ReleaseDefinitionName = input.ReadString();
            break;
          }
          case 26: {
            environments_.AddEntriesFrom(input, _repeated_environments_codec);
            break;
          }
          case 34: {
            buildDefinitions_.AddEntriesFrom(input, _repeated_buildDefinitions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateReleaseDefinitionRequest : pb::IMessage<CreateReleaseDefinitionRequest> {
    private static readonly pb::MessageParser<CreateReleaseDefinitionRequest> _parser = new pb::MessageParser<CreateReleaseDefinitionRequest>(() => new CreateReleaseDefinitionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateReleaseDefinitionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionRequest(CreateReleaseDefinitionRequest other) : this() {
      ServiceName = other.ServiceName;
      ReuseAwsStackFromServiceName = other.ReuseAwsStackFromServiceName;
      ServiceFolder = other.ServiceFolder;
      ConfigurationFolder = other.ConfigurationFolder;
      isProdPath_ = other.isProdPath_;
      needsAwsUserAccountCreated_ = other.needsAwsUserAccountCreated_;
      ReleaseDefinition = other.releaseDefinition_ != null ? other.ReleaseDefinition.Clone() : null;
      databaseServers_ = other.databaseServers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateReleaseDefinitionRequest Clone() {
      return new CreateReleaseDefinitionRequest(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }

    /// <summary>Field number for the "reuse_aws_stack_from_service_name" field.</summary>
    public const int ReuseAwsStackFromServiceNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_reuseAwsStackFromServiceName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string reuseAwsStackFromServiceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReuseAwsStackFromServiceName {
      get { return reuseAwsStackFromServiceName_; }
      set {
        reuseAwsStackFromServiceName_ = value;
      }
    }

    /// <summary>Field number for the "service_folder" field.</summary>
    public const int ServiceFolderFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_serviceFolder_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string serviceFolder_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceFolder {
      get { return serviceFolder_; }
      set {
        serviceFolder_ = value;
      }
    }

    /// <summary>Field number for the "configuration_folder" field.</summary>
    public const int ConfigurationFolderFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_configurationFolder_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string configurationFolder_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigurationFolder {
      get { return configurationFolder_; }
      set {
        configurationFolder_ = value;
      }
    }

    /// <summary>Field number for the "is_prod_path" field.</summary>
    public const int IsProdPathFieldNumber = 5;
    private bool isProdPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsProdPath {
      get { return isProdPath_; }
      set {
        isProdPath_ = value;
      }
    }

    /// <summary>Field number for the "needs_aws_user_account_created" field.</summary>
    public const int NeedsAwsUserAccountCreatedFieldNumber = 6;
    private bool needsAwsUserAccountCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NeedsAwsUserAccountCreated {
      get { return needsAwsUserAccountCreated_; }
      set {
        needsAwsUserAccountCreated_ = value;
      }
    }

    /// <summary>Field number for the "release_definition" field.</summary>
    public const int ReleaseDefinitionFieldNumber = 7;
    private global::Company.KickstartBuild.Services.Types.ReleaseDefinition releaseDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.ReleaseDefinition ReleaseDefinition {
      get { return releaseDefinition_; }
      set {
        releaseDefinition_ = value;
      }
    }

    /// <summary>Field number for the "database_servers" field.</summary>
    public const int DatabaseServersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Company.KickstartBuild.Services.Types.DatabaseServer> _repeated_databaseServers_codec
        = pb::FieldCodec.ForMessage(66, global::Company.KickstartBuild.Services.Types.DatabaseServer.Parser);
    private readonly pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.DatabaseServer> databaseServers_ = new pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.DatabaseServer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.DatabaseServer> DatabaseServers {
      get { return databaseServers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateReleaseDefinitionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateReleaseDefinitionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (ReuseAwsStackFromServiceName != other.ReuseAwsStackFromServiceName) return false;
      if (ServiceFolder != other.ServiceFolder) return false;
      if (ConfigurationFolder != other.ConfigurationFolder) return false;
      if (IsProdPath != other.IsProdPath) return false;
      if (NeedsAwsUserAccountCreated != other.NeedsAwsUserAccountCreated) return false;
      if (!object.Equals(ReleaseDefinition, other.ReleaseDefinition)) return false;
      if(!databaseServers_.Equals(other.databaseServers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (reuseAwsStackFromServiceName_ != null) hash ^= ReuseAwsStackFromServiceName.GetHashCode();
      if (serviceFolder_ != null) hash ^= ServiceFolder.GetHashCode();
      if (configurationFolder_ != null) hash ^= ConfigurationFolder.GetHashCode();
      if (IsProdPath != false) hash ^= IsProdPath.GetHashCode();
      if (NeedsAwsUserAccountCreated != false) hash ^= NeedsAwsUserAccountCreated.GetHashCode();
      if (releaseDefinition_ != null) hash ^= ReleaseDefinition.GetHashCode();
      hash ^= databaseServers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (reuseAwsStackFromServiceName_ != null) {
        _single_reuseAwsStackFromServiceName_codec.WriteTagAndValue(output, ReuseAwsStackFromServiceName);
      }
      if (serviceFolder_ != null) {
        _single_serviceFolder_codec.WriteTagAndValue(output, ServiceFolder);
      }
      if (configurationFolder_ != null) {
        _single_configurationFolder_codec.WriteTagAndValue(output, ConfigurationFolder);
      }
      if (IsProdPath != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsProdPath);
      }
      if (NeedsAwsUserAccountCreated != false) {
        output.WriteRawTag(48);
        output.WriteBool(NeedsAwsUserAccountCreated);
      }
      if (releaseDefinition_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ReleaseDefinition);
      }
      databaseServers_.WriteTo(output, _repeated_databaseServers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (reuseAwsStackFromServiceName_ != null) {
        size += _single_reuseAwsStackFromServiceName_codec.CalculateSizeWithTag(ReuseAwsStackFromServiceName);
      }
      if (serviceFolder_ != null) {
        size += _single_serviceFolder_codec.CalculateSizeWithTag(ServiceFolder);
      }
      if (configurationFolder_ != null) {
        size += _single_configurationFolder_codec.CalculateSizeWithTag(ConfigurationFolder);
      }
      if (IsProdPath != false) {
        size += 1 + 1;
      }
      if (NeedsAwsUserAccountCreated != false) {
        size += 1 + 1;
      }
      if (releaseDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDefinition);
      }
      size += databaseServers_.CalculateSize(_repeated_databaseServers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateReleaseDefinitionRequest other) {
      if (other == null) {
        return;
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.reuseAwsStackFromServiceName_ != null) {
        if (reuseAwsStackFromServiceName_ == null || other.ReuseAwsStackFromServiceName != "") {
          ReuseAwsStackFromServiceName = other.ReuseAwsStackFromServiceName;
        }
      }
      if (other.serviceFolder_ != null) {
        if (serviceFolder_ == null || other.ServiceFolder != "") {
          ServiceFolder = other.ServiceFolder;
        }
      }
      if (other.configurationFolder_ != null) {
        if (configurationFolder_ == null || other.ConfigurationFolder != "") {
          ConfigurationFolder = other.ConfigurationFolder;
        }
      }
      if (other.IsProdPath != false) {
        IsProdPath = other.IsProdPath;
      }
      if (other.NeedsAwsUserAccountCreated != false) {
        NeedsAwsUserAccountCreated = other.NeedsAwsUserAccountCreated;
      }
      if (other.releaseDefinition_ != null) {
        if (releaseDefinition_ == null) {
          releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
        }
        ReleaseDefinition.MergeFrom(other.ReleaseDefinition);
      }
      databaseServers_.Add(other.databaseServers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 18: {
            string value = _single_reuseAwsStackFromServiceName_codec.Read(input);
            if (reuseAwsStackFromServiceName_ == null || value != "") {
              ReuseAwsStackFromServiceName = value;
            }
            break;
          }
          case 26: {
            string value = _single_serviceFolder_codec.Read(input);
            if (serviceFolder_ == null || value != "") {
              ServiceFolder = value;
            }
            break;
          }
          case 34: {
            string value = _single_configurationFolder_codec.Read(input);
            if (configurationFolder_ == null || value != "") {
              ConfigurationFolder = value;
            }
            break;
          }
          case 40: {
            IsProdPath = input.ReadBool();
            break;
          }
          case 48: {
            NeedsAwsUserAccountCreated = input.ReadBool();
            break;
          }
          case 58: {
            if (releaseDefinition_ == null) {
              releaseDefinition_ = new global::Company.KickstartBuild.Services.Types.ReleaseDefinition();
            }
            input.ReadMessage(releaseDefinition_);
            break;
          }
          case 66: {
            databaseServers_.AddEntriesFrom(input, _repeated_databaseServers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueBuildRequest : pb::IMessage<QueueBuildRequest> {
    private static readonly pb::MessageParser<QueueBuildRequest> _parser = new pb::MessageParser<QueueBuildRequest>(() => new QueueBuildRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueBuildRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildRequest(QueueBuildRequest other) : this() {
      BuildDefinition = other.buildDefinition_ != null ? other.BuildDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildRequest Clone() {
      return new QueueBuildRequest(this);
    }

    /// <summary>Field number for the "build_definition" field.</summary>
    public const int BuildDefinitionFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.BuildDefinition buildDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.BuildDefinition BuildDefinition {
      get { return buildDefinition_; }
      set {
        buildDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueBuildRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueBuildRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BuildDefinition, other.BuildDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (buildDefinition_ != null) hash ^= BuildDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (buildDefinition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BuildDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (buildDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueBuildRequest other) {
      if (other == null) {
        return;
      }
      if (other.buildDefinition_ != null) {
        if (buildDefinition_ == null) {
          buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
        }
        BuildDefinition.MergeFrom(other.BuildDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (buildDefinition_ == null) {
              buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
            }
            input.ReadMessage(buildDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueBuildResponse : pb::IMessage<QueueBuildResponse> {
    private static readonly pb::MessageParser<QueueBuildResponse> _parser = new pb::MessageParser<QueueBuildResponse>(() => new QueueBuildResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueBuildResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildResponse(QueueBuildResponse other) : this() {
      Build = other.build_ != null ? other.Build.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueBuildResponse Clone() {
      return new QueueBuildResponse(this);
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.Build build_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.Build Build {
      get { return build_; }
      set {
        build_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueBuildResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueBuildResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Build, other.Build)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (build_ != null) hash ^= Build.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (build_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Build);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (build_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Build);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueBuildResponse other) {
      if (other == null) {
        return;
      }
      if (other.build_ != null) {
        if (build_ == null) {
          build_ = new global::Company.KickstartBuild.Services.Types.Build();
        }
        Build.MergeFrom(other.Build);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (build_ == null) {
              build_ = new global::Company.KickstartBuild.Services.Types.Build();
            }
            input.ReadMessage(build_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateBuildDefinitionRequest : pb::IMessage<CreateBuildDefinitionRequest> {
    private static readonly pb::MessageParser<CreateBuildDefinitionRequest> _parser = new pb::MessageParser<CreateBuildDefinitionRequest>(() => new CreateBuildDefinitionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBuildDefinitionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionRequest(CreateBuildDefinitionRequest other) : this() {
      ServiceName = other.ServiceName;
      BuildDefinition = other.buildDefinition_ != null ? other.BuildDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionRequest Clone() {
      return new CreateBuildDefinitionRequest(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }

    /// <summary>Field number for the "build_definition" field.</summary>
    public const int BuildDefinitionFieldNumber = 2;
    private global::Company.KickstartBuild.Services.Types.BuildDefinition buildDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.BuildDefinition BuildDefinition {
      get { return buildDefinition_; }
      set {
        buildDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBuildDefinitionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBuildDefinitionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (!object.Equals(BuildDefinition, other.BuildDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (buildDefinition_ != null) hash ^= BuildDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (buildDefinition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (buildDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBuildDefinitionRequest other) {
      if (other == null) {
        return;
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.buildDefinition_ != null) {
        if (buildDefinition_ == null) {
          buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
        }
        BuildDefinition.MergeFrom(other.BuildDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 18: {
            if (buildDefinition_ == null) {
              buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
            }
            input.ReadMessage(buildDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateBuildDefinitionResponse : pb::IMessage<CreateBuildDefinitionResponse> {
    private static readonly pb::MessageParser<CreateBuildDefinitionResponse> _parser = new pb::MessageParser<CreateBuildDefinitionResponse>(() => new CreateBuildDefinitionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateBuildDefinitionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionResponse(CreateBuildDefinitionResponse other) : this() {
      ServiceName = other.ServiceName;
      BuildDefinition = other.buildDefinition_ != null ? other.BuildDefinition.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateBuildDefinitionResponse Clone() {
      return new CreateBuildDefinitionResponse(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }

    /// <summary>Field number for the "build_definition" field.</summary>
    public const int BuildDefinitionFieldNumber = 2;
    private global::Company.KickstartBuild.Services.Types.BuildDefinition buildDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.BuildDefinition BuildDefinition {
      get { return buildDefinition_; }
      set {
        buildDefinition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateBuildDefinitionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateBuildDefinitionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (!object.Equals(BuildDefinition, other.BuildDefinition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (buildDefinition_ != null) hash ^= BuildDefinition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (buildDefinition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BuildDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (buildDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateBuildDefinitionResponse other) {
      if (other == null) {
        return;
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.buildDefinition_ != null) {
        if (buildDefinition_ == null) {
          buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
        }
        BuildDefinition.MergeFrom(other.BuildDefinition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 18: {
            if (buildDefinition_ == null) {
              buildDefinition_ = new global::Company.KickstartBuild.Services.Types.BuildDefinition();
            }
            input.ReadMessage(buildDefinition_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuildDefinition : pb::IMessage<BuildDefinition> {
    private static readonly pb::MessageParser<BuildDefinition> _parser = new pb::MessageParser<BuildDefinition>(() => new BuildDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDefinition(BuildDefinition other) : this() {
      buildDefinitionIdentifier_ = other.buildDefinitionIdentifier_;
      buildDefinitionName_ = other.buildDefinitionName_;
      RepoName = other.RepoName;
      RepoPath = other.RepoPath;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDefinition Clone() {
      return new BuildDefinition(this);
    }

    /// <summary>Field number for the "build_definition_identifier" field.</summary>
    public const int BuildDefinitionIdentifierFieldNumber = 1;
    private int buildDefinitionIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildDefinitionIdentifier {
      get { return buildDefinitionIdentifier_; }
      set {
        buildDefinitionIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "build_definition_name" field.</summary>
    public const int BuildDefinitionNameFieldNumber = 2;
    private string buildDefinitionName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuildDefinitionName {
      get { return buildDefinitionName_; }
      set {
        buildDefinitionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repo_name" field.</summary>
    public const int RepoNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_repoName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string repoName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepoName {
      get { return repoName_; }
      set {
        repoName_ = value;
      }
    }

    /// <summary>Field number for the "repo_path" field.</summary>
    public const int RepoPathFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_repoPath_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string repoPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepoPath {
      get { return repoPath_; }
      set {
        repoPath_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildDefinitionIdentifier != other.BuildDefinitionIdentifier) return false;
      if (BuildDefinitionName != other.BuildDefinitionName) return false;
      if (RepoName != other.RepoName) return false;
      if (RepoPath != other.RepoPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildDefinitionIdentifier != 0) hash ^= BuildDefinitionIdentifier.GetHashCode();
      if (BuildDefinitionName.Length != 0) hash ^= BuildDefinitionName.GetHashCode();
      if (repoName_ != null) hash ^= RepoName.GetHashCode();
      if (repoPath_ != null) hash ^= RepoPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildDefinitionIdentifier != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildDefinitionIdentifier);
      }
      if (BuildDefinitionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BuildDefinitionName);
      }
      if (repoName_ != null) {
        _single_repoName_codec.WriteTagAndValue(output, RepoName);
      }
      if (repoPath_ != null) {
        _single_repoPath_codec.WriteTagAndValue(output, RepoPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildDefinitionIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildDefinitionIdentifier);
      }
      if (BuildDefinitionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildDefinitionName);
      }
      if (repoName_ != null) {
        size += _single_repoName_codec.CalculateSizeWithTag(RepoName);
      }
      if (repoPath_ != null) {
        size += _single_repoPath_codec.CalculateSizeWithTag(RepoPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildDefinition other) {
      if (other == null) {
        return;
      }
      if (other.BuildDefinitionIdentifier != 0) {
        BuildDefinitionIdentifier = other.BuildDefinitionIdentifier;
      }
      if (other.BuildDefinitionName.Length != 0) {
        BuildDefinitionName = other.BuildDefinitionName;
      }
      if (other.repoName_ != null) {
        if (repoName_ == null || other.RepoName != "") {
          RepoName = other.RepoName;
        }
      }
      if (other.repoPath_ != null) {
        if (repoPath_ == null || other.RepoPath != "") {
          RepoPath = other.RepoPath;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildDefinitionIdentifier = input.ReadInt32();
            break;
          }
          case 18: {
            BuildDefinitionName = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_repoName_codec.Read(input);
            if (repoName_ == null || value != "") {
              RepoName = value;
            }
            break;
          }
          case 50: {
            string value = _single_repoPath_codec.Read(input);
            if (repoPath_ == null || value != "") {
              RepoPath = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class Build : pb::IMessage<Build> {
    private static readonly pb::MessageParser<Build> _parser = new pb::MessageParser<Build>(() => new Build());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Build> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build(Build other) : this() {
      buildIdentifier_ = other.buildIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Build Clone() {
      return new Build(this);
    }

    /// <summary>Field number for the "build_identifier" field.</summary>
    public const int BuildIdentifierFieldNumber = 1;
    private int buildIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuildIdentifier {
      get { return buildIdentifier_; }
      set {
        buildIdentifier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Build);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Build other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildIdentifier != other.BuildIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildIdentifier != 0) hash ^= BuildIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildIdentifier != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BuildIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuildIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Build other) {
      if (other == null) {
        return;
      }
      if (other.BuildIdentifier != 0) {
        BuildIdentifier = other.BuildIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BuildIdentifier = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Environment : pb::IMessage<Environment> {
    private static readonly pb::MessageParser<Environment> _parser = new pb::MessageParser<Environment>(() => new Environment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Environment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment(Environment other) : this() {
      environmentIdentifier_ = other.environmentIdentifier_;
      environmentName_ = other.environmentName_;
      environmentTag_ = other.environmentTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Environment Clone() {
      return new Environment(this);
    }

    /// <summary>Field number for the "environment_identifier" field.</summary>
    public const int EnvironmentIdentifierFieldNumber = 1;
    private int environmentIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnvironmentIdentifier {
      get { return environmentIdentifier_; }
      set {
        environmentIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "environment_name" field.</summary>
    public const int EnvironmentNameFieldNumber = 2;
    private string environmentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnvironmentName {
      get { return environmentName_; }
      set {
        environmentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "environment_tag" field.</summary>
    public const int EnvironmentTagFieldNumber = 3;
    private global::Company.KickstartBuild.Services.Types.EnvironmentTag environmentTag_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.EnvironmentTag EnvironmentTag {
      get { return environmentTag_; }
      set {
        environmentTag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Environment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Environment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnvironmentIdentifier != other.EnvironmentIdentifier) return false;
      if (EnvironmentName != other.EnvironmentName) return false;
      if (EnvironmentTag != other.EnvironmentTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnvironmentIdentifier != 0) hash ^= EnvironmentIdentifier.GetHashCode();
      if (EnvironmentName.Length != 0) hash ^= EnvironmentName.GetHashCode();
      if (EnvironmentTag != 0) hash ^= EnvironmentTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnvironmentIdentifier != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EnvironmentIdentifier);
      }
      if (EnvironmentName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EnvironmentName);
      }
      if (EnvironmentTag != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) EnvironmentTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnvironmentIdentifier != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnvironmentIdentifier);
      }
      if (EnvironmentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnvironmentName);
      }
      if (EnvironmentTag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnvironmentTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Environment other) {
      if (other == null) {
        return;
      }
      if (other.EnvironmentIdentifier != 0) {
        EnvironmentIdentifier = other.EnvironmentIdentifier;
      }
      if (other.EnvironmentName.Length != 0) {
        EnvironmentName = other.EnvironmentName;
      }
      if (other.EnvironmentTag != 0) {
        EnvironmentTag = other.EnvironmentTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnvironmentIdentifier = input.ReadInt32();
            break;
          }
          case 18: {
            EnvironmentName = input.ReadString();
            break;
          }
          case 24: {
            environmentTag_ = (global::Company.KickstartBuild.Services.Types.EnvironmentTag) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatabaseServer : pb::IMessage<DatabaseServer> {
    private static readonly pb::MessageParser<DatabaseServer> _parser = new pb::MessageParser<DatabaseServer>(() => new DatabaseServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabaseServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseServer(DatabaseServer other) : this() {
      dbmsType_ = other.dbmsType_;
      serverLocation_ = other.serverLocation_;
      databases_ = other.databases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseServer Clone() {
      return new DatabaseServer(this);
    }

    /// <summary>Field number for the "dbms_type" field.</summary>
    public const int DbmsTypeFieldNumber = 1;
    private global::Company.KickstartBuild.Services.Types.DbmsType dbmsType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.DbmsType DbmsType {
      get { return dbmsType_; }
      set {
        dbmsType_ = value;
      }
    }

    /// <summary>Field number for the "server_location" field.</summary>
    public const int ServerLocationFieldNumber = 2;
    private global::Company.KickstartBuild.Services.Types.ServerLocation serverLocation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Company.KickstartBuild.Services.Types.ServerLocation ServerLocation {
      get { return serverLocation_; }
      set {
        serverLocation_ = value;
      }
    }

    /// <summary>Field number for the "databases" field.</summary>
    public const int DatabasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Company.KickstartBuild.Services.Types.Database> _repeated_databases_codec
        = pb::FieldCodec.ForMessage(26, global::Company.KickstartBuild.Services.Types.Database.Parser);
    private readonly pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Database> databases_ = new pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Database>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Company.KickstartBuild.Services.Types.Database> Databases {
      get { return databases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabaseServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabaseServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DbmsType != other.DbmsType) return false;
      if (ServerLocation != other.ServerLocation) return false;
      if(!databases_.Equals(other.databases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DbmsType != 0) hash ^= DbmsType.GetHashCode();
      if (ServerLocation != 0) hash ^= ServerLocation.GetHashCode();
      hash ^= databases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DbmsType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DbmsType);
      }
      if (ServerLocation != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ServerLocation);
      }
      databases_.WriteTo(output, _repeated_databases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DbmsType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DbmsType);
      }
      if (ServerLocation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServerLocation);
      }
      size += databases_.CalculateSize(_repeated_databases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabaseServer other) {
      if (other == null) {
        return;
      }
      if (other.DbmsType != 0) {
        DbmsType = other.DbmsType;
      }
      if (other.ServerLocation != 0) {
        ServerLocation = other.ServerLocation;
      }
      databases_.Add(other.databases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            dbmsType_ = (global::Company.KickstartBuild.Services.Types.DbmsType) input.ReadEnum();
            break;
          }
          case 16: {
            serverLocation_ = (global::Company.KickstartBuild.Services.Types.ServerLocation) input.ReadEnum();
            break;
          }
          case 26: {
            databases_.AddEntriesFrom(input, _repeated_databases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Database : pb::IMessage<Database> {
    private static readonly pb::MessageParser<Database> _parser = new pb::MessageParser<Database>(() => new Database());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Database> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Company.KickstartBuild.Services.Types.KickstartBuildServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database(Database other) : this() {
      databaseName_ = other.databaseName_;
      projectFolder_ = other.projectFolder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database Clone() {
      return new Database(this);
    }

    /// <summary>Field number for the "database_name" field.</summary>
    public const int DatabaseNameFieldNumber = 1;
    private string databaseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatabaseName {
      get { return databaseName_; }
      set {
        databaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_folder" field.</summary>
    public const int ProjectFolderFieldNumber = 2;
    private string projectFolder_ = "";
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectFolder {
      get { return projectFolder_; }
      set {
        projectFolder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Database);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Database other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatabaseName != other.DatabaseName) return false;
      if (ProjectFolder != other.ProjectFolder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatabaseName.Length != 0) hash ^= DatabaseName.GetHashCode();
      if (ProjectFolder.Length != 0) hash ^= ProjectFolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatabaseName);
      }
      if (ProjectFolder.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseName);
      }
      if (ProjectFolder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Database other) {
      if (other == null) {
        return;
      }
      if (other.DatabaseName.Length != 0) {
        DatabaseName = other.DatabaseName;
      }
      if (other.ProjectFolder.Length != 0) {
        ProjectFolder = other.ProjectFolder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatabaseName = input.ReadString();
            break;
          }
          case 18: {
            ProjectFolder = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
